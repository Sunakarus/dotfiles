#! /bin/sh

#PANEL_FONT_FAMILY="DejaVuSansMono:size=8"
PANEL_FONT_FAMILY="TerminessPowerline:size=8"
ICON_FONT="FontAwesome:size=10"

if xdo id -a "$PANEL_WM_NAME" > /dev/null ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT
bspc subscribe report > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &
clock -sf 'S%H:%M' > "$PANEL_FIFO" &

# battery
while true;
do
#BAT_LEVEL_1=$(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep "percentage" | sed 's/\s//g' | cut -d: -f2 | sed 's/%//')
BAT_LEVEL_1=$(battery | cut -d' ' -f2)

SYMBOL="" # full battery
if [ $BAT_LEVEL_1 -le 100 ] && [ $BAT_LEVEL_1 -ge 90 ];
then
    SYMBOL="" # full battery
    else if [ $BAT_LEVEL_1 -lt 90 ] && [ $BAT_LEVEL_1 -ge 75 ];
        then
            SYMBOL="" # 3/4
            else if [ $BAT_LEVEL_1 -lt 75 ] && [ $BAT_LEVEL_1 -ge 40 ];
            then
                SYMBOL="" # 2/4
            else if [ $BAT_LEVEL_1 -lt 40 ] && [ $BAT_LEVEL_1 -ge 10 ];
            then
                SYMBOL="" # full battery
            else
                SYMBOL="" # empty 
            fi
        fi
    fi
fi

if [ $BAT_LEVEL_1 == 100 ];
then
    echo "B$SYMBOL $BAT_LEVEL_1%"
    #echo "B BAT:$BAT_LEVEL_1"
else
    if [[ $(battery) == "Charging"* ]]
    then
        echo "B $SYMBOL $BAT_LEVEL_1%"
    else
        echo "B$SYMBOL $BAT_LEVEL_1%"
    fi
fi
sleep 1;
done > "$PANEL_FIFO" &

# mpd+spotify
while true;
do
CURRENT_TRACK=$(sh current_track.sh)

echo "M $CURRENT_TRACK"

sleep 1;
done > "$PANEL_FIFO" &


# alsa volume
while true;
do
ALSA_VOLUME=$(amixer -c 1 get Master | grep 'Mono: Playback' | grep -o '...%' | sed 's/\[//' | sed 's/%//' | sed 's/ //')
ALSA_STATE=$(amixer -c 1 get Master | grep 'Mono: Playback' | grep -o '\[on]')

if [ $ALSA_STATE ]
then
    if [ $ALSA_VOLUME -ge 40 ]
    then
        echo V' '$ALSA_VOLUME"%" #volUp
    else
        echo V' '$ALSA_VOLUME"%" #volDown
    fi
else
    echo V' mute'
fi
sleep 0.1
done > $PANEL_FIFO &


# wifi
while true;
do
WIFI_SSID=$(iw wlp9s0 link | grep 'SSID' | sed 's/SSID: //' | sed 's/\t//')
#WIFI_SIGNAL=$(iw wlp9s0 link | grep 'signal' | sed 's/signal: //' | sed 's/ dBm//' | sed 's/\t//')
WIFI_SIGNAL=$(cat /proc/net/wireless | awk 'NR==3 { print $3}' | sed 's/\.//')
WIFI_IP=$(ifconfig wlp9s0 | grep "inet " | cut -d' ' -f10)
  if [ -z "$WIFI_SSID" ];
  then
    echo "L  Disconnected "
  else
    if [ ! -z "$WIFI_IP" ];
        then
        echo "L  $WIFI_SSID " #connected
    else
        echo L' ' $WIFI_SSID
    fi
  fi
  sleep 1
done > $PANEL_FIFO &

# date
while true;
  do 
      #echo D'\uf073' $(date +'%d %B %Y')
      echo "D $(LC_ALL=en_US.UTF-8 date +'%A %d.%m.%Y')"
  sleep 10
done > $PANEL_FIFO &

. panel_colors

panel_bar < "$PANEL_FIFO" | lemonbar -a 32 -n "$PANEL_WM_NAME" -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY" -f "$ICON_FONT" -F "$COLOR_DEFAULT_FG" -B "$COLOR_DEFAULT_BG" | sh &

wid=$(xdo id -a "$PANEL_WM_NAME")
tries_left=20
while [ -z "$wid" -a "$tries_left" -gt 0 ] ; do
	sleep 0.05
	wid=$(xdo id -a "$PANEL_WM_NAME")
	tries_left=$((tries_left - 1))
done
[ -n "$wid" ] && xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

wait
